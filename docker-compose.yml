version: '3.8'
services:

  frontend:
    image: plantei-frontend:1.0
    hostname: frontend
    container_name: plantei-frontend
    cap_drop: ["ALL"]
    build:
      context: plantei-frontend
      dockerfile: Dockerfile
    ports:
      - 3000:3000

  database:
    image: plantei-database:1.0
    user: "postgres"
    hostname: database
    container_name: plantei-database
    cap_drop: ["ALL"]
    restart: always
    build:
      context: database
      dockerfile: Dockerfile
    networks:
      - back
    expose:
      - '5432'
    environment:
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - LANG="pt_BR.UTF-8"
    volumes:
      - postgres_db:/var/lib/postgresql
    healthcheck:
       test: [ "CMD", "pg_isready", "--dbname=${POSTGRES_DB}", "--username=${POSTGRES_USER}" ]
       interval: 5s
       timeout: 5s
       retries: 5
    read_only: true
    tmpfs:
      - /var/run/postgresql

  backend:
    depends_on:
      - database
    image: plantei-backend:1.0
    hostname: backend
    container_name: plantei-backend
    cap_drop: ["ALL"]
    build:
      context: .
      dockerfile: plantei-backend/Dockerfile
    networks:
      - back
    ports:
      - 8080:8080
    read_only: true
    tmpfs:
      - /tmp

networks:
  back:
    name: plantei-backend
    driver: bridge

volumes:
  postgres_db:
